import logging, os, random, sys, time, telebot
from dotenv import load_dotenv

load_dotenv()

bot_key = os.getenv('BOT_KEY')
#chat where bot will publish all messages anonymously
answers_chat = int(os.getenv('CHAT_FOR_ANSWERS'))
#channel or chat where bot will publish questions and answers after your reply on question
channel_to_publish = os.getenv('CHAT_TO_PUBLISH_QA')
#hashtag that will be added in end of the final post
hashtag = os.getenv('HASHTAG')

format_str = "%(asctime)s [%(threadName)-12.12s] [%(levelname)-5.5s]  %(message)s"
logFormatter = logging.Formatter(format_str)
logging.basicConfig(filename="log.txt", level=logging.INFO, encoding = "UTF-8", format=format_str)
consoleHandler = logging.StreamHandler()
consoleHandler.setFormatter(logFormatter)
logging.getLogger().addHandler(consoleHandler)

bot = telebot.TeleBot(bot_key, parse_mode='MARKDOWN')


@bot.message_handler(commands=['start', 'help'], chat_types='private')
def send_welcome(message):
    logging.info(f'\n~ New user! \n   - {message.from_user.username}\n')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!')
    time.sleep(1)
    bot.send_message(message.chat.id, '–¢—É—Ç –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å ***–ª—é–±–æ–π*** –≤–æ–ø—Ä–æ—Å –∞–±—Å–æ–ª—é—Ç–Ω–æ ***–∞–Ω–æ–Ω–∏–º–Ω–æ*** –∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞–º __–æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ –Ω–µ–≥–æ –≤ —Å–≤–æ—ë–º –∫–∞–Ω–∞–ª–µ__! ‚ú®')
    time.sleep(1)
    bot.send_message(message.chat.id, '–ù—É –∫–∞–∫, –≥–æ—Ç–æ–≤—ã?) –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å–∏–∫–∏!')


@bot.message_handler(func=lambda message: True, chat_types='private')
def react_on_question(message):
    logging.info(f'\n~ Question come! \n   - {message.from_user.username}\n   - {message.text}\n')
    reply_vars = [
        '–≠—Ç–æ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–≤–æ–∏–º —Ö–æ–∑—è–µ–≤–∞–º.',
        '–•–º, –∞ —ç—Ç–æ –ø—Ä–∞–≤–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –£–∂–µ —Å–ø—Ä–∞—à–∏–≤–∞—é, –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ –¥–Ω–µ–≤–Ω–∏—á–∫–µ!',
        '–í–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç—è—Ç! –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –¥–Ω–µ–≤–Ω–∏—á–∫–æ–º, –æ—Ç–≤–µ—Ç –ø–æ—è–≤–∏—Ç—Å—è —Ç–∞–º.']
    bot.reply_to(message, random.choice(reply_vars))
    bot.send_message(answers_chat, '***–í–Ω–∏–º–∞–Ω–∏–µ! –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å:***')
    bot.send_message(answers_chat, message.text)


@bot.message_handler(func=lambda message: True, chat_types='group')
def react_on_answer(message):
    logging.info(f'\n~ Answer publishing! \n   - {message.reply_to_message.text}\n   - {message.text}\n')
    if message.chat.id == answers_chat:
        if message.from_user.username == "edwy_reed":
            message = f'***–í–æ–ø—Ä–æ—Å–∏–∫üíú:\n ‚ú® ***{message.reply_to_message.text} \n \n***–û—Ç–≤–µ—Ç–∏–∫üíú:\n ü¶Å ***{message.text} \n \n{hashtag}'
            bot.send_message(channel_to_publish, message)
        elif message.from_user.username == "redbeaniy":
            message = f'***–í–æ–ø—Ä–æ—Å–∏–∫üíú:\n ‚ú® ***{message.reply_to_message.text} \n \n***–û—Ç–≤–µ—Ç–∏–∫üíú:\n üê± ***{message.text} \n \n{hashtag}'
            bot.send_message(channel_to_publish, message)

        

bot.infinity_polling()